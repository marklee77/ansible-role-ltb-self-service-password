---
- name: ensure dependencies available through apt are installed
  apt: 
    pkg: "{{ item }}" 
    state: latest 
    update_cache: yes 
    cache_valid_time: 600
  with_items:
    - ant
    - nginx
    - openjdk-7-jdk
    - ssl-cert
    - subversion

# FIXME: if ssl-cert turns out problematic this can probably be done in a
# self-contained shell script...
#- name: ensure that ssl-cert is configured properly to generate self-signed certificate if required
#  debconf:
#    name: ssl-cert
#    question: make-ssl-cert/hostname 
#    vtype: string
#    value: "{{ owncloud_hostname }}"

#- name: create self-signed key/certificate pair if required
#  shell: DEBIAN_FRONTEND=noninteractive make-ssl-cert /usr/share/ssl-cert/ssleay.cnf {{ owncloud_ssl_cert_file }}
#         creates={{ owncloud_ssl_cert_file }}

#- name: ensure that owncloud group exists
#  group:
#    name: owncloud
#    state: present

#- name: ensure that owncloud user exits
#  user:
#    name: owncloud
#    group: owncloud
#    home: /srv/owncloud
#    createhome: no
#    shell: /bin/bash
#    state: present

#- name: ensure owncloud database is present
#  mysql_db:
#    name: owncloud

#- name: ensure owncloud database user is present
#  mysql_user:
#    name: owncloud
#    host: "{{ item }}"
#    password: "{{ owncloud_owncloud_mysql_password }}"
#    priv: owncloud.*:ALL
#  with_items:
#    - "%"
#    - localhost

- name: ensure /var/cache/ansible directory exists
  file:
    path: /var/cache/ansible
    owner: root
    group: root
    mode: 0755
    state: directory

- name: checkout pwm from svn repository
  subversion:
    repo: http://pwm.googlecode.com/svn/tags/v1.7.1/pwm
    dest: /var/cache/ansible/pwm

- name: build pwm.war
  command: ant makeWAR 
           chdir=/var/cache/ansible/pwm/servlet 
           creates=/var/cache/ansible/pwm/servlet/build/pwm.war

- name: link /var/cache/ansible/pwm/servlet/build/pwm.war to ..
  file:
    src: /var/cache/ansible/pwm/servlet/build/pwm.war 
    dest: /var/lib/tomcat6/webapps/pwm.war
    state: link

#- name: ensure /srv/owncloud is owned by owncloud user
#  file:
#    path: /srv/owncloud
#    owner: owncloud
#    group: owncloud
#    recurse: yes

#- name: copy .my.cnf file with owncloud password credentials
#  template:
#    src: srv/owncloud/.my.cnf
#    dest: /srv/owncloud/.my.cnf
#    owner: owncloud
#    group: owncloud
#    mode: 0600

#- name: update /etc/php5/fpm/pool.d/owncloud.conf from template
#  template:
#    src: etc/php5/fpm/pool.d/owncloud.conf
#    dest: /etc/php5/fpm/pool.d/owncloud.conf 
#    owner: root
#    group: root
#    mode: 0644
#  notify:
#    - restart php5-fpm

#- name: update /etc/nginx/sites-available/pwm from template
#  template:
#    src: etc/nginx/sites-available/pwm
#    dest: /etc/nginx/sites-available/pwm
#    owner: root
#    group: root
#    mode: 0644
#  notify:
#    - restart nginx

#- name: ensure /etc/nginx/sites-enabled/pwm exists and links to ../sites-available/pwm
#  file:
#    path: /etc/nginx/sites-enabled/pwm
#    src: ../sites-available/pwm
#    force: yes
#    state: link
#  notify:
#    - restart nginx

- name: ensure that there is not a hostname collision with the nginx default host
  lineinfile:
    dest: /etc/nginx/sites-available/default
    regexp: '^(\s+)(server_name {{ pwm_hostname }};.*)$'
    backrefs: yes
    line: '\1#\2'
    state: present
  notify:
    - restart nginx

#- name: ensure owncloud services are started and enabled
#  service:
#    name: "{{ item }}"
#    state: started
#    enabled: yes
#  with_items:
#    - tomcat6
#    - nginx

